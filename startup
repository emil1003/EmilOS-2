 --EmilOS (Startup Program)
local version = 3.01
 --(c) 2016 Emil Inc. All Rights Reserved.

 --Locals
local checkFileList = {"EmilOS","System/api/framework","System/api/emilworks","System/api/hash","System/api/sha","System/api/json","System/api/blittle","System/api/objectify","System/Apps/appStore","System/Apps/settings"}
local fileNotFound = nil
local userFiles = {"customEvents","messages","installedApps","settings"}
local settings = nil

if _HOST then
	_G.aa, _G.ae, _G.oe = "å", "æ", "ø"
else
	_G.aa, _G.ae, _G.oe = "aa", "ae", "oe"
end

 --Check for and load settings
if fs.exists("System") then
	if fs.exists("System/settings") then
		file = fs.open("System/settings","r")
		settings = textutils.unserialize(file.readAll())
		file.close()
		if settings == nil then
			settings = {}
			firstTimeBoot = true
		end
	elseif fs.exists("System/oldSettings") then
		settings = {}
		firstTimeBoot = true
		updated = true
	else
		settings = {}
		firstTimeBoot = true
	end
end
if not settings.background then
	settings.background = "gray"
end
if not settings.langPack then
	settings.langPack = "English"
end
if not settings.computerUUID then
	local random = math.random
	local function uuid()
		local template ='xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'
		return string.gsub(template, '[xy]', function (c)
			local v = (c == 'x') and random(0, 0xf) or random(8, 0xb)
			return string.format('%x', v)
		end)
	end
	settings.computerUUID = uuid()
end
if fs.exists("System/lang/"..settings.langPack) then
	file = fs.open("System/lang/"..settings.langPack,"r")
	_G.langStrings = textutils.unserialize(file.readAll())
	file.close()
else
	error("Language Pack not found: /System/lang/"..(settings.langPack or ""),0)
end
if not fs.exists("Apps/data") then
	fs.makeDir("Apps/data")
end

 --Functions
local function printCentered(text, y)
    local w, h = term.getSize()
    x = math.ceil(math.ceil((w / 2) - (#text / 2)), 0)+1
    term.setCursorPos(x, y)
    print(text)
end
local function getYN()
	while true do
		local e, par1 = os.pullEventRaw("key")
		if par1 == keys.y then
			return true
		elseif par1 == keys.n then
			return false
		end
	end
end
if not term.isColor() then
	term.setTextColor(colors.white)
	term.clear()
	term.setCursorPos(1,1)
	print("EmilOS requires an advanced computer")
	return
end

term.setBackgroundColor(colors.white)
term.setTextColor(colors.black)
term.clear()
term.setCursorPos(24,9)
term.blit("EmilOS","ffff77","000000")

 --Run a file check
for k,v in pairs(checkFileList) do
	if not fs.exists(v) then
		fileNotFound = v
	end
end

 --If there's a missing file, abort boot and show error screen
if fileNotFound then
	term.setCursorPos(23,9)
	write("   ?   ")
	term.setTextColor(colors.gray)
	printCentered(langStrings.missingfile..fileNotFound,13)
	term.setTextColor(colors.lightGray)
	printCentered(langStrings.missingfile2,15)
	term.setTextColor(colors.gray)
	while true do
		local e, par1 = os.pullEventRaw("key")
		if par1 == keys.r then
			if fs.exists("disk") then
				if fs.exists("disk/install/"..fileNotFound) then
					paintutils.drawLine(1,13,51,13,colors.white)
					printCentered(langStrings.repair_copyingfile..fileNotFound,13)
					fs.copy("disk/install/"..fileNotFound,fileNotFound)
					sleep(0.5)
					paintutils.drawLine(1,13,51,13,colors.white)
					printCentered(langStrings.repair_copiedfile,13)
					sleep(2)
					os.reboot()
				else
					paintutils.drawLine(1,13,51,13,colors.white)
					printCentered(langStrings.repair_filenotfound..fileNotFound,13)
				end
			else
				paintutils.drawLine(1,13,51,13,colors.white)
				printCentered(langStrings.repair_nodisk,13)
			end
			sleep(1)
			paintutils.drawLine(1,13,51,13,colors.white)
			printCentered(langStrings.missingfile..fileNotFound,13)
		elseif par1 == keys.s then
			sleep(0.05)
			term.setBackgroundColor(colors.black)
			term.setTextColor(colors.white)
			term.clear()
			term.setCursorPos(1,1)
			return
		end
	end
end

 -- Load APIs
for k,v in pairs(fs.list("/System/api/")) do
	os.loadAPI("/System/api/"..v)
end

 -- Generate a unique instance ID
_G._EMILOS_INSTANCE = hash.pbkdf2(math.random(),settings.computerUUID,1)

 -- Boot screen
os.startTimer(1)
while true do
	local e, par1, par2, par3 = os.pullEventRaw()
	if e == "timer" then
		break
	elseif e == "key" then
		if par1 == keys.s then
			term.setBackgroundColor(colors.black)
			term.clear()
			term.setTextColor(colors.white)
			term.setCursorPos(1,1)
			printCentered("--- EmilOS Single-User Mode ---",1)
			sleep(0.2)
			if settings.password then
				write("Password:")
				while true do
					local input = read("*")
					if tostring(hash.pbkdf2(input,settings.computerUUID,5)) == settings.password then
						print("Password Accepted")
						print("")
						break
					else
						print("Wrong password")
						write("Password:")
					end
				end
			end
			return
		elseif par1 == keys.r then
			while true do
				term.setBackgroundColor(colors.black)
				term.clear()
				term.setTextColor(colors.white)
				term.setCursorPos(1,1)
				printCentered("--- EmilOS Recovery mode ---",1)
				print("")
				printCentered("What would you like to do?",3)
				print("[1] Reset personal settings")
				print("[2] Reset EmilOS to factory settings")
				print("[3] Wipe computer")
				print("")
				print("[4] Reboot computer")
				while true do
					e, key = os.pullEventRaw("key")
					if key == keys.one or key == keys.two or key == keys.three then
						print("Are you sure? [y/n]")
						if getYN() then
							if settings.password then
								print("Type your password:")
								sleep(0.05)
								while true do
									local input = read(" ")
									if tostring(hash.pbkdf2(input,settings.computerUUID,5)) == settings.password then
										break
									else
										sleep(1)
										print("Wrong password")
									end
								end
							end
							if key == keys.one then
								fs.delete("System/settings")
								print("Settings deleted")
								sleep(2)
								os.reboot()
								break
							elseif key == keys.two or key == keys.three then
								printError("WARNING! THIS ACTION IS IRREVERSIBLE!")
								print("Do you want to continue? [y/n]")
								if getYN() then
									if key == keys.two then
										for k,v in pairs(fs.list("System")) do
											for i=1,#userFiles do
												if userFiles[i] == v then
													fs.delete("System/"..v)
													print("Deleted System/"..v)
												end
											end
										end
										for k,v in pairs(fs.list("Apps")) do
											if not fs.isDir("Apps/"..v) then
												fs.delete("Apps/"..v)
												print("Deleted Apps/"..v)
											end
										end
										fs.delete("Apps/data")
										print("Deleted all app data")
										print("The computer will now reboot")
										sleep(2)
										os.reboot()
									elseif key == keys.three then
										print("Please type 'EmilOS' to continue")
										sleep(0.05)
										while true do
											local input = io.read()
											if input == "EmilOS" then
												term.setBackgroundColor(colors.black)
												term.clear()
												term.setTextColor(colors.white)
												printCentered("EmilOS will now be deleted.",7)
												sleep(2)
												printCentered("Goodbye.",9)
												sleep(5)
												pcall(shell.run,"rm *")
												os.reboot()
											end
										end
									end
								end
							end
						else
							doRedraw = true
							break
						end
					elseif key == keys.four then
						os.reboot()
					end
					if doRedraw then
						doRedraw = false
						break
					end
				end
			end
		elseif par1 == keys.v then
			verbose = true
			term.setCursorPos(43,19)
			write("Safe Mode")
		end
	end
end
if not firstTimeBoot then
	if not settings.noAnim then
		firstTime = true
		for i=24,3,-3 do
			if not firstTime then
				sleep(0.05)
			else
				firstTime = false
			end
			term.setCursorPos(i,9)
			term.blit("EmilOS   ","ffff77777","000000000")
		end
		firstTime = true
		for i=9,1,-2 do
			if not firstTime then
				sleep(0.05)
			else
				firstTime = false
			end
			term.setCursorPos(3,i)
			term.blit("EmilOS","ffff77","000000")
			term.setCursorPos(3,i + 2)
			write("       ")
		end
	end
	if settings.topBarColor then
		paintutils.drawLine(1,1,51,1,colors[settings.topBarColor])
		term.setTextColor(colors[settings.topBarTextColor] or colors.black)
	end
	term.setCursorPos(3,1)
	write("EmilOS")
else
	for i=9,4,-1 do
		term.setCursorPos(24,i)
		term.blit("EmilOS","ffff77","000000")
		term.setCursorPos(24,i + 1)
		write("      ")
		sleep(0.05)
	end
end

 --If no settings file exists, run through setup program.
if firstTimeBoot then

	local oldPullEvent = os.pullEvent
	os.pullEvent = function(sFilter)
		local event = {oldPullEvent(sFilter)}
		if event[1] == "mouse_click" or event[1] == "mouse_up" then
			event[3] = event[3] - 5
		end
		return table.unpack(event)
	end

	term.setBackgroundColor(colors.gray)
	term.clear()
	local setupWindow = framework.createWindow(term.current(),6,1,41,18)
	local previousWindow = term.redirect(setupWindow.rawWindow)
	
	local variables = {
		countryName = nil,
		geoData = nil,
		doLoadLangFile = false,
		
		doReinstallFromBackup = false,
		
		username = nil,
		passwordHash = nil,
		
		background = "gray",
		topBarColor = "white",
		topBarTextColor = "black",
		menuBackground = "white",
		menuText = "black",
		menuHighlight = "lightBlue",
		menuInactive = "lightGray",
		dontDoMenuShadows = false,
		theme = 1,
		background_selected = 8,
		
		fullClock = true,
		dontCheckOnStartup = false,
		
		serverUrl = "emilinc.hopto.org",
		serverUsername = nil,
		serverAuthToken = nil,
	}
	
	local setupScreens = {function()
		term.setBackgroundColor(colors.white)
		term.clear()
		paintutils.drawLine(1,1,43,1,colors.gray)
		term.setCursorPos(19,3)
		term.blit("EmilOS","ffff77","000000")
		term.setTextColor(colors.black)
		
		local alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
		local file = fs.open("System/firstRun/countries.json","r")
		local list = json.decode(file.readAll())
		file.close()
		local cT = {}
		local lT = {}
		for i=1,#alphabet do
			for k,v in pairs(list) do
				if string.sub(alphabet,i,i) == string.sub(v,1,1) then
					table.insert(cT,v)
				end
			end
		end
		for i=1,#alphabet do
			for k,v in pairs(fs.list("System/lang/")) do
				if string.sub(alphabet,i,i) == string.sub(v,1,1) then
					table.insert(lT,v)
				end
			end
		end
		
		local objectManager = objectify.objectManager()
		objectManager.addObject(objectify.createObject.dropdown("CountrySelect",8,11,25,4,cT))
		objectManager.addObject(objectify.createObject.dropdown("LangSelect",8,13,25,4,lT))
		objectManager.addObject(objectify.createObject.button("NextScreen",38,17,"\26"))
		
		if http and not variables.countryName then
			http.request("http://ipinfo.io/json/")
			while true do
				e, par1, par2 = os.pullEvent()
				if e == "http_success" then
					geoData = json.decode(par2.readAll())
					if geoData.country == "DK" then
						settings.langPack = "Dansk"
						variables.countryName = "Denmark"
						variables.doLoadLangFile = true
					end
					break
				elseif e == "http_failure" then
					break
				end
			end
			if variables.doLoadLangFile then
				local file = fs.open("System/lang/"..settings.langPack,"r")
				_G.langStrings = textutils.unserialize(file.readAll())
				file.close()
			end
		end
		if not variables.countryName then
			variables.countryName = "United States"
		end
		
		objectManager.getByTag("CountrySelect").setSelectedString(variables.countryName)
		objectManager.getByTag("LangSelect").setSelectedString(settings.langPack)
		
		local function redrawScreen()
			term.setBackgroundColor(colors.white)
			term.clear()
			paintutils.drawLine(1,1,43,1,colors.gray)
			term.setBackgroundColor(colors.white)
			term.setCursorPos(19,3)
			term.blit("EmilOS","ffff77","000000")
			term.setTextColor(colors.black)
			printCentered(langStrings.firstboot_welcome,6)
			term.setTextColor(colors.gray)
			printCentered(langStrings.firstboot_welcome_2,8)
			term.setTextColor(colors.black)
			objectManager.drawAll()
		end
		
		redrawScreen()
		
		while true do
			local e, but, cx, cy = os.pullEvent()
			if e == "mouse_click" then
				for k,v in pairs(objectManager.getObjectList()) do
					if cx >= v.hitbox.startX and cx <= v.hitbox.endX and cy >= v.hitbox.startY and cy <= v.hitbox.endY then
						if v.tag == "CountrySelect" then
							v.expand()
							v.setSelected(v.getNewSelection())
							variables.countryName = v.getSelected()
							redrawScreen()
						elseif v.tag == "LangSelect" then
							v.expand()
							v.setSelected(v.getNewSelection())
							settings.langPack = v.getSelected()
							local file = fs.open("System/lang/"..settings.langPack,"r")
							_G.langStrings = textutils.unserialize(file.readAll())
							file.close()
							redrawScreen()
						elseif v.type == "button" then
							v.highlight()
						end
					end
				end
			elseif e == "mouse_up" then
				for k,v in pairs(objectManager.getObjectList()) do
					if cx >= v.hitbox.startX and cx <= v.hitbox.endX and cy >= v.hitbox.startY and cy <= v.hitbox.endY then
						if v.tag == "NextScreen" then
							if v.highlighted then
								return 2
							end
						end
					end
				end
				redrawScreen()
			end
		end
	end, function()
		
		term.setBackgroundColor(colors.white)
		term.clear()
		paintutils.drawLine(1,1,43,1,colors.gray)
		term.setBackgroundColor(colors.white)
		term.setCursorPos(19,3)
		term.blit("EmilOS","ffff77","000000")
		term.setTextColor(colors.black)
		printCentered(langStrings.firstboot_setupastitle,6)
		printCentered(langStrings.firstboot_setupas1,9)
		printCentered(langStrings.firstboot_setupas2,10)
		
		local objectManager = objectify.objectManager()
		objectManager.addObject(objectify.createObject.button("PreviousScreen",2,17,"\27"))
		objectManager.addObject(objectify.createObject.button("NextScreen",38,17,"\26",nil,false))
		
		objectManager.drawAll()
		
		local setupMode = nil
		while true do
			local e, but, cx, cy = os.pullEvent()
			if e == "mouse_click" then
				if cx >= 1 and cx <= 41 and cy >= 9 and cy <= 10 then
					term.setTextColor(colors.black)
					paintutils.drawLine(1,9,41,9,colors.white)
					paintutils.drawLine(1,10,41,10,colors.white)
					printCentered(langStrings.firstboot_setupas1,9)
					printCentered(langStrings.firstboot_setupas2,10)
					term.setTextColor(colors.white)
					if cy == 9 then
						setupMode = 1
						paintutils.drawLine(1,9,41,9,colors.lightBlue)
						printCentered(langStrings.firstboot_setupas1,9)
						variables.doReinstallFromBackup = false
					elseif cy == 10 then
						setupMode = 4
						paintutils.drawLine(1,10,41,10,colors.lightBlue)
						printCentered(langStrings.firstboot_setupas2,10)
						variables.doReinstallFromBackup = true
					end
					objectManager.getByTag("NextScreen").enabled = true
				end
				for k,v in pairs(objectManager.getObjectList()) do
					if cx >= v.hitbox.startX and cx <= v.hitbox.endX and cy >= v.hitbox.startY and cy <= v.hitbox.endY then
						if v.type == "button" then
							v.highlight()
						end
					end
				end
			elseif e == "mouse_up" then
				for k,v in pairs(objectManager.getObjectList()) do
					if cx >= v.hitbox.startX and cx <= v.hitbox.endX and cy >= v.hitbox.startY and cy <= v.hitbox.endY then
						if v.enabled and v.highlighted then
							if v.tag == "PreviousScreen" then
								return 1
							elseif v.tag == "NextScreen" then
								return 2 + setupMode
							end
						end
					end
				end
				objectManager.drawAll()
			end
		end
	end,function()
		term.setBackgroundColor(colors.white)
		term.clear()
		
		local objectManager = objectify.objectManager()
		objectManager.addObject(objectify.createObject.textInput("UsernameInput",8,10,25,langStrings.firstboot_username))
		objectManager.addObject(objectify.createObject.textInput("PasswordInput1",8,12,25,langStrings.firstboot_password,true))
		objectManager.addObject(objectify.createObject.textInput("PasswordInput2",8,14,25,langStrings.firstboot_passwordagain,true))
		objectManager.addObject(objectify.createObject.button("PreviousScreen",2,17,"\27"))
		objectManager.addObject(objectify.createObject.button("NextScreen",38,17,"\26",nil,false))
		
		local function redrawScreen()
			paintutils.drawLine(1,1,43,1,colors.gray)
			term.setCursorPos(19,3)
			term.blit("EmilOS","ffff77","000000")
			term.setBackgroundColor(colors.white)
			term.setTextColor(colors.black)
			printCentered(langStrings.firstboot_createaccount,6)
			term.setTextColor(colors.lightGray)
			printCentered(langStrings.firstboot_createaccount1,7)
			term.setTextColor(colors.black)
			paintutils.drawLine(5,17,39,17,colors.white)
			objectManager.getByTag("NextScreen").enabled = false
			objectManager.drawAll()
			local usernameInput = objectManager.getByTag("UsernameInput")
			local passwordInput1 = objectManager.getByTag("PasswordInput1")
			local passwordInput2 = objectManager.getByTag("PasswordInput2")
			if usernameInput.input ~= "" and passwordInput1.input ~= "" and passwordInput2.input ~= "" then
				local passwordsMatch = false
				if passwordInput1.input ~= "" or passwordInput2.input ~= "" then
					hash1 = tostring(hash.pbkdf2(passwordInput1.input,settings.computerUUID,5))
					hash2 = tostring(hash.pbkdf2(passwordInput2.input,settings.computerUUID,5))
					if hash1 ~= hash2 then
						term.setCursorPos(37 - langStrings.firstboot_error_passwordsdontmatch:len(),17)
						term.setTextColor(colors.red)
						term.setBackgroundColor(colors.white)
						write(langStrings.firstboot_error_passwordsdontmatch)
					else
						objectManager.getByTag("NextScreen").enabled = true
						objectManager.drawAll()
					end
				end
			end
		end
		
		redrawScreen()
		
		while true do
			local e, but, cx, cy = os.pullEvent()
			if e == "mouse_click" then
				for k,v in pairs(objectManager.getObjectList()) do
					if cx >= v.hitbox.startX and cx <= v.hitbox.endX and cy >= v.hitbox.startY and cy <= v.hitbox.endY then
						if v.tag == "UsernameInput" then
							v.onClick()
							redrawScreen()
						elseif v.tag == "PasswordInput1" then
							v.onClick()
							redrawScreen()
						elseif v.tag == "PasswordInput2" then
							v.onClick()
							redrawScreen()
						elseif v.type == "button" then
							v.highlight()
						end
					end
				end
			elseif e == "mouse_up" then
				for k,v in pairs(objectManager.getObjectList()) do
					if cx >= v.hitbox.startX and cx <= v.hitbox.endX and cy >= v.hitbox.startY and cy <= v.hitbox.endY then
						if v.tag == "PreviousScreen" then
							if v.highlighted then
								return 2
							end
						elseif v.tag == "NextScreen" then
							if v.enabled and v.highlighted then
								variables.username = objectManager.getByTag("UsernameInput").input
								variables.passwordHash = tostring(hash.pbkdf2(objectManager.getByTag("PasswordInput1").input,settings.computerUUID,5))
								return 4
							end
						end
					end
				end
				redrawScreen()
			end
		end
	end,function()
		term.setBackgroundColor(colors.white)
		term.clear()
		
		local previewWindow = window.create(term.current(),14,11,15,5)
		
		local objectManager = objectify.objectManager()
		objectManager.addObject(objectify.createObject.dropdown("BackgroundSelect",2,10,10,5,langStrings.firstboot_colors))
		objectManager.addObject(objectify.createObject.dropdown("ThemeSelect",30,10,10,5,langStrings.firstboot_themes))
		objectManager.addObject(objectify.createObject.switch("ShadowsSwitch",30,13,true))
		objectManager.addObject(objectify.createObject.button("PreviousScreen",2,17,"\27"))
		objectManager.addObject(objectify.createObject.button("NextScreen",38,17,"\26"))
		
		local function redrawScreen()
			paintutils.drawLine(1,1,43,1,colors.gray)
			term.setCursorPos(19,3)
			term.blit("EmilOS","ffff77","000000")
			term.setBackgroundColor(colors.white)
			term.setTextColor(colors.black)
			printCentered(langStrings.firstboot_setappearance,6)
			term.setTextColor(colors.gray)
			term.setCursorPos(2,9)
			write(langStrings.firstboot_background)
			term.setCursorPos(30,9)
			write(langStrings.firstboot_theme)
			term.setCursorPos(30,12)
			write(langStrings.firstboot_shadows)
			objectManager.drawAll()
			
			local backgroundColor = bit.blshift(1,objectManager.getByTag("BackgroundSelect").selected - 1)
			if backgroundColor == 0 then
				backgroundColor = 1
			end
			variables.background = backgroundColor
			
			previewWindow.setBackgroundColor(backgroundColor)
			previewWindow.clear()
			local previousWindow = term.redirect(previewWindow)
			if objectManager.getByTag("ThemeSelect").selected == 1 then
				paintutils.drawLine(1,1,15,1,colors.white)
				term.setTextColor(colors.black)
				term.setCursorPos(3,1)
				print("EmilOS")
				variables.topBarColor = "white"
				variables.topBarTextColor = "gray"
				variables.menuBackground = "white"
				variables.menuText = "black"
				variables.menuHighlight = "lightBlue"
				variables.menuInactive = "lightGray"
			elseif objectManager.getByTag("ThemeSelect").selected == 2 then
				paintutils.drawLine(1,1,15,1,colors.gray)
				term.setTextColor(colors.lightGray)
				term.setCursorPos(3,1)
				print("EmilOS")
				variables.topBarColor = "gray"
				variables.topBarTextColor = "lightGray"
				variables.menuBackground = "gray"
				variables.menuText = "white"
				variables.menuHighlight = "lightBlue"
				variables.menuInactive = "lightGray"
			end
			term.redirect(previousWindow)
			previewWindow.redraw()
		end
		
		objectManager.getByTag("ThemeSelect").setSelected(1)
		objectManager.getByTag("BackgroundSelect").setSelected(8)
		redrawScreen()
		
		while true do
			local e, but, cx, cy = os.pullEvent()
			if e == "mouse_click" then
				for k,v in pairs(objectManager.getObjectList()) do
					if cx >= v.hitbox.startX and cx <= v.hitbox.endX and cy >= v.hitbox.startY and cy <= v.hitbox.endY then
						if v.tag == "BackgroundSelect" then
							v.expand()
							v.setSelected(v.getNewSelection())
							term.setBackgroundColor(colors.white)
							term.clear()
							redrawScreen()
							variables.background_selected = v.selected
						elseif v.tag == "ThemeSelect" then
							v.expand()
							v.setSelected(v.getNewSelection())
							term.setBackgroundColor(colors.white)
							term.clear()
							redrawScreen()
							variables.theme = v.selected
						elseif v.tag == "ShadowsSwitch" then
							v.toggle()
							variables.dontDoMenuShadows = not v.state
							redrawScreen()
						elseif v.type == "button" then
							v.highlight()
						end
					end
				end
			elseif e == "mouse_up" then
				for k,v in pairs(objectManager.getObjectList()) do
					if cx >= v.hitbox.startX and cx <= v.hitbox.endX and cy >= v.hitbox.startY and cy <= v.hitbox.endY then
						if v.enabled and v.highlighted then
							if v.tag == "PreviousScreen" then
								return 3
							elseif v.tag == "NextScreen" then
								return 5
							end
						end
					end
				end
				redrawScreen()
			end
		end
	end,function()
		term.setBackgroundColor(colors.white)
		term.clear()
		
		local objectManager = objectify.objectManager()
		objectManager.addObject(objectify.createObject.switch("ClockSwitch",3,9,variables.fullClock))
		objectManager.addObject(objectify.createObject.switch("UpdateSwitch",3,11,not variables.dontCheckOnStartup))
		objectManager.addObject(objectify.createObject.button("PreviousScreen",2,17,"\27"))
		objectManager.addObject(objectify.createObject.button("NextScreen",38,17,"\26"))
		
		local function redrawScreen()
			paintutils.drawLine(1,1,43,1,colors.gray)
			term.setCursorPos(19,3)
			term.blit("EmilOS","ffff77","000000")
			term.setBackgroundColor(colors.white)
			term.setTextColor(colors.black)
			printCentered("Andre indstillinger",6)
			term.setCursorPos(7,9)
			write("Brug 24-timers ur")
			term.setCursorPos(7,11)
			write("Auto-check efter opdateringer")
			objectManager.drawAll()
		end
		
		redrawScreen()
		
		while true do
			local e, but, cx, cy = os.pullEvent()
			if e == "mouse_click" then
				for k,v in pairs(objectManager.getObjectList()) do
					if cx >= v.hitbox.startX and cx <= v.hitbox.endX and cy >= v.hitbox.startY and cy <= v.hitbox.endY then
						if v.tag == "ClockSwitch" then
							v.toggle()
							variables.fullClock = not variables.fullClock
						elseif v.tag == "UpdateSwitch" then
							v.toggle()
							variables.dontCheckOnStartup = not variables.dontCheckOnStartup
						elseif v.type == "button" then
							v.highlight()
						end
					end
				end
			elseif e == "mouse_up" then
				for k,v in pairs(objectManager.getObjectList()) do
					if cx >= v.hitbox.startX and cx <= v.hitbox.endX and cy >= v.hitbox.startY and cy <= v.hitbox.endY then
						if v.enabled and v.highlighted then
							if v.tag == "PreviousScreen" then
								return 4
							elseif v.tag == "NextScreen" then
								return 6
							end
						end
					end
				end
				redrawScreen()
			end
		end
	end,function()
		term.setBackgroundColor(colors.white)
		term.clear()
		
		local w = term.getSize()
		local loginButtonX = math.ceil(math.ceil((w / 2) - (#langStrings.firstboot_login + 2 / 2)), 0)+1
		
		local objectManager = objectify.objectManager()
		objectManager.addObject(objectify.createObject.textInput("UsernameInput",9,9,24,langStrings.firstboot_username))
		objectManager.addObject(objectify.createObject.textInput("PasswordInput",9,11,24,langStrings.firstboot_password,true))
		objectManager.addObject(objectify.createObject.button("LoginButton",loginButtonX,13,langStrings.firstboot_login,false))
		objectManager.addObject(objectify.createObject.button("PreviousScreen",2,17,"\27"))
		objectManager.addObject(objectify.createObject.button("NextScreen",38,17,"\26",nil,false))
		
		local function redrawScreen()
			paintutils.drawLine(1,1,43,1,colors.gray)
			term.setCursorPos(19,3)
			term.blit("EmilOS","ffff77","000000")
			term.setBackgroundColor(colors.white)
			term.setTextColor(colors.black)
			printCentered("Log ind på Emil Inc. Konto",6)
			if not variables.doReinstallFromBackup then
				term.setTextColor(colors.gray)
				term.setCursorPos(37 - langStrings.firstboot_skip:len(),17)
				write(langStrings.firstboot_skip)
				objectManager.getByTag("NextScreen").enabled = true
			end
			objectManager.drawAll()
		end
		
		redrawScreen()
		
		while true do
			local e, but, cx, cy = os.pullEvent()
			if e == "mouse_click" then
				for k,v in pairs(objectManager.getObjectList()) do
					if cx >= v.hitbox.startX and cx <= v.hitbox.endX and cy >= v.hitbox.startY and cy <= v.hitbox.endY then
						if v.tag == "UsernameInput" then
							v.onClick()
						elseif v.tag == "PasswordInput" then
							v.onClick()
						elseif v.type == "button" then
							v.highlight()
						end
					end
				end
			elseif e == "mouse_up" then
				for k,v in pairs(objectManager.getObjectList()) do
					if cx >= v.hitbox.startX and cx <= v.hitbox.endX and cy >= v.hitbox.startY and cy <= v.hitbox.endY then
						if v.enabled and v.highlighted then
							if v.tag == "PreviousScreen" then
								if variables.doReinstallFromBackup then
									return 2
								else
									return 5
								end
							elseif v.tag == "NextScreen" then
								return 7
							end
						end
					end
				end
				redrawScreen()
			end
		end
	end,function()
		term.setBackgroundColor(colors.white)
		term.clear()
		
		local objectManager = objectify.objectManager()
		objectManager.addObject(objectify.createObject.button("RebootButton",2,17,"Genstart"))
		
		local function redrawScreen()
			paintutils.drawLine(1,1,43,1,colors.gray)
			term.setCursorPos(19,3)
			term.blit("EmilOS","ffff77","000000")
			term.setBackgroundColor(colors.white)
			term.setTextColor(colors.black)
			printCentered("Setup er gennemført",6)
			printCentered("Klik på Genstart for at anvende",8)
			objectManager.drawAll()
		end
		
		redrawScreen()
		
		settings.user = variables.username
		settings.password = variables.passwordHash
		settings.topBarColor = variables.topBarColor
		settings.topBarTextColor = variables.topBarTextColor
		settings.menuBackground = variables.menuBackground
		settings.menuText = variables.menuText
		settings.menuHighlight = variables.menuHighlight
		settings.menuInactive = variables.menuInactive
		settings.dontDoMenuShadows = variables.dontDoMenuShadows
		settings.fullClock = variables.fullClock
		settings.dontCheckOnStartup = variables.dontCheckOnStartup
		settings.serverUrl = variables.serverUrl
		settings.theme = variables.theme
		settings.background_selected = variables.background_selected
		
		for k,v in pairs(colors) do
			if v == variables.background then
				settings.background = k
				break
			end
		end	
		
		while true do
			local e, but, cx, cy = os.pullEvent()
			if e == "mouse_click" then
				for k,v in pairs(objectManager.getObjectList()) do
					if cx >= v.hitbox.startX and cx <= v.hitbox.endX and cy >= v.hitbox.startY and cy <= v.hitbox.endY then
						if v.type == "button" then
							v.highlight()
						end
					end
				end
			elseif e == "mouse_up" then
				for k,v in pairs(objectManager.getObjectList()) do
					if cx >= v.hitbox.startX and cx <= v.hitbox.endX and cy >= v.hitbox.startY and cy <= v.hitbox.endY then
						if v.highlighted and v.enabled then
							if v.tag == "RebootButton" then
								local file = fs.open("/System/settings","w")
								file.write(textutils.serialize(settings))
								file.close()
								os.reboot()
							end
						end
					end
				end
				redrawScreen()
			end
		end
	end}
	
	local returnCode = 1
	while true do
		returnCode = setupScreens[returnCode]()
		if returnCode == "end" then
			break
		end
	end
		
	term.redirect(previousWindow)
end

 --Check password and login
local tries = 0
if settings.password then
	while true do
		local input = emilworks.popupMsg(colors.lime,"5","",langStrings.login_inputpassword,nil,nil,nil,true)
		if tostring(hash.pbkdf2(input,settings.computerUUID,5)) == settings.password then
			break
		else
			emilworks.popupMsg(colors.red,"3","",langStrings.login_wrongpassword,nil,nil,nil,true)
			sleep(1)
			tries = tries + 1
			if tries == 5 then
				local timeLeft = 30
				emilworks.popupMsg(colors.lime,"3","",langStrings.login_locked,langStrings.login_wait.." ",nil,nil,true)
				while true do
					term.setCursorPos(19,8)
					term.setTextColor(colors.black)
					term.setBackgroundColor(colors.white)
					write(timeLeft.." "..langStrings.login_seconds.." ")
					timeLeft = timeLeft - 1
					sleep(1)
					if timeLeft == 0 then
						tries = 0
						break
					end
				end
			end
		end
	end
end

 --Run EmilOS and catch exit codes. If none, then assume fatal error, display error screen
shell.run("EmilOS")
if not verbose then
	timer = os.startTimer(0.05)
	while true do
		e, par1 = os.pullEvent()
		if e == "shutdown" then
			os.shutdown()
		elseif e == "reboot" then
			os.reboot()
		elseif e == "timer" and par1 == timer then
			term.redirect(term.native())
			term.setBackgroundColor(colors.white)
			term.setTextColor(colors.black)
			term.clear()
			printCentered(langStrings.hascrashed,9)
			term.setTextColor(colors.gray)
			printCentered(langStrings.hascrashed2,11)
			sleep(2)
			os.reboot()
		end
	end
end